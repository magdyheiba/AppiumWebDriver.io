name: Wdio-MobileApp-Emulator

on:
  pull_request:
    branches: [main]
  workflow_dispatch:
permissions:
  contents: read
  pages: write
  id-token: write

env:
  ANDROID_ARCH: x86_64
  ANDROID_TARGET: google_apis
  API_LEVEL: 30
  ANDROID_BUILD_TOOLS_VERSION: 33.0.2
  ANDROID_SDK_PACKAGES: system-images;android-30;google_apis;x86_64 platforms;android-30 build-tools;33.0.2 platform-tools emulator
  EMULATOR_TIMEOUT: 350
  EMULATOR_NAME: nexus
  BOOT_TIMEOUT: 700

jobs:
  webriverIo-emulator:
    timeout-minutes: 20

    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3

      - name: Add avdmanager and sdkmanager to system PATH
        run: |
          echo "$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/emulator:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/${{ env.ANDROID_BUILD_TOOLS_VERSION }}" >> $GITHUB_PATH

      - name: Install Sdk
        run: |
          yes Y | sdkmanager --licenses
          sdkmanager --install ${ANDROID_SDK_PACKAGES}

      - name: Build emulator
        run: |
          echo "no" | avdmanager --verbose create avd --force -n $EMULATOR_NAME --abi "${ANDROID_TARGET}/${ANDROID_ARCH}" -k "system-images;android-${API_LEVEL};${ANDROID_TARGET};${ANDROID_ARCH}"

      - name: Launch emulator
        run: |
          chmod +x ./start_emu_headless.sh
          EMULATOR_TIMEOUT=$EMULATOR_TIMEOUT EMULATOR_NAME=$EMULATOR_NAME ./start_emu_headless.sh

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "yarn"
      - run: yarn
      - name: Install appium
        run: |
          npm i -g appium@next --unsafe-perm=true --allow-root
          appium driver install uiautomator2

      - name: Install dependencies
        run: |
          yarn generate
      - name: Check emulator booting status
        run: |
          chmod a+x ./sscript/check_emu.sh
          ./sscript/check_emu.sh

      - name: Install APK
        run: |
          adb shell dumpsys window 2>/dev/null | grep -i mCurrentFocus
          adb install ./apps/ApiDemos-debug.apk
          chmod a+x ./mainActivityCheck.sh
          ./mainActivityCheck.sh

      - name: Execute the test
        continue-on-error: true
        run: |
          yarn androidtests

      - name: Generate report
        if: always()
        run: |
          npx allure generate report/allure-results

      - name: Setup Pages
        if: always()
        uses: actions/configure-pages@v3

      - name: Upload artifact
        if: always()
        uses: actions/upload-pages-artifact@v1
        with:
          path: "./allure-report"

      - name: Deploy to GitHub Pages
        if: always()
        id: deployment
        uses: actions/deploy-pages@v2

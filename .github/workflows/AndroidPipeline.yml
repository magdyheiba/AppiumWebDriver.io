name: Tests on Lambdatest

on:
  pull_request:
    branches: [main]

permissions:
  contents: write
  pages: write
  id-token: write
env:
  LT_USERNAME: ${{ secrets.LT_USERNAME }}
  LT_ACCESS_KEY: ${{ secrets.LT_ACCESS_KEY }}
  IPHONE_MODEL: "iPhone 14 Pro"
  IOS_VERSION: 16.4
  simulator_udid:

jobs:
  # Android:
  #   runs-on: macos-13
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: mskelton/setup-yarn@v1
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: 18
  #     - name: Run the tests
  #       run: |
  #         yarn androidtests
  #     - name: generate allure report
  #       run: |
  #         brew install allure
  #         allure generate allure-results
  #         zip -r allure-report.zip allure-report
  #     - name: Upload Allure Report as Pipeline Artifact
  #       if: always()
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: Allure Report
  #         path: "allure-report.zip"
  ios:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v3
      - uses: mskelton/setup-yarn@v1
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Export environment variables
        run: |
          export IPHONE_MODEL=$IPHONE_MODEL
          export IOS_VERSION=$IOS_VERSION
      - name: check simulator list
        run: xcrun simctl list

      - name: Start simulator
        run: |

          chmod a+x scripts/start_simu.sh
          scripts/start_simu.sh
          iphone_model="${IPHONE_MODEL// /-}"
          ios_version="${IOS_VERSION//./-}"
          simulator_name="${iphone_model}"
          simulator_udid=$(xcrun simctl create "$IPHONE_MODEL" "com.apple.CoreSimulator.SimDeviceType.$iphone_model" "com.apple.CoreSimulator.SimRuntime.iOS-$ios_version")
          echo $simulator_udid
      # - name: Run the tests
      #   run: |
      #     yarn iostestslocal
      # - name: generate allure report
      #   run: |
      #     brew install allure
      #     allure generate allure-results
      #     zip -r allure-report.zip allure-report
      # - name: Upload Allure Report as Pipeline Artifact
      #   if: always()
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: Allure Report
      #     path: "allure-report.zip"

name: Tests on Lambdatest

on:
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      Post Production tests:
        description: "Post Production tests"
        required: false
        default: "production"
        type: string
env:
  LT_USERNAME: ${{ secrets.LT_USERNAME }}
  LT_ACCESS_KEY: ${{ secrets.LT_ACCESS_KEY }}
  IPHONE_MODEL: "iPhone 14 Pro"
  IOS_VERSION: 16.4

jobs:
  Android:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v3
      - uses: mskelton/setup-yarn@v1
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Run the tests
        run: |
          yarn androidtests
      - name: generate allure report
        run: |
          brew install allure
          allure generate allure-results
          zip -r allure-report.zip allure-report
      - name: Upload Allure Report as Pipeline Artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Allure Report Android
          path: "allure-report.zip"
  ios:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v3
      - uses: mskelton/setup-yarn@v1
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Run the tests
        run: |
          yarn iostests
      - name: generate allure report
        run: |
          brew install allure
          allure generate allure-results
          zip -r allure-report.zip allure-report
      - name: Upload Allure Report as Pipeline Artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Allure Report ios
          path: "allure-report.zip"

  # iosSimulator:
  #   runs-on: macos-13
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: mskelton/setup-yarn@v1
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: 18
  #     - name: Export environment variables
  #       run: |
  #         export IPHONE_MODEL=$IPHONE_MODEL
  #         export IOS_VERSION=$IOS_VERSION
  #     - name: check simulator list
  #       run: xcrun simctl list

  #     - name: Start simulator
  #       run: |
  #         chmod a+x scripts/start_simu.sh
  #         scripts/start_simu.sh
  #         open -a /Applications/Xcode.app/Contents/Developer/Applications/Simulator.app
  #         echo '--- installing app'
  #         xcrun simctl install booted /Users/runner/work/AppiumWebDriver.io/AppiumWebDriver.io/apps/SauceLabs.app
  #     - name: Run the tests
  #       run: |
  #         yarn iostestslocal
  #     - name: generate allure report
  #       run: |
  #         brew install allure
  #         allure generate allure-results
  #         zip -r allure-report.zip allure-report
  #     - name: Upload Allure Report as Pipeline Artifact
  #       if: always()
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: Allure Report ios
  #         path: "allure-report.zip"
